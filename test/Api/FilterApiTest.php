<?php
/**
 * FilterApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Camunda Platform REST API
 *
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.16.0-alpha2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FilterApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FilterApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createFilter
     *
     * Create Filter.
     *
     */
    public function testCreateFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFilter
     *
     * Delete Filter.
     *
     */
    public function testDeleteFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for executeFilterCount
     *
     * Execute Filter Count.
     *
     */
    public function testExecuteFilterCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for executeFilterList
     *
     * Execute Filter List.
     *
     */
    public function testExecuteFilterList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for executeFilterSingleResult
     *
     * Execute Filter Single Result.
     *
     */
    public function testExecuteFilterSingleResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for filterResourceOptions
     *
     * Filter Resource Options.
     *
     */
    public function testFilterResourceOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for filterResourceOptionsSingle
     *
     * Filter Resource Options.
     *
     */
    public function testFilterResourceOptionsSingle()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFilterCount
     *
     * Get Filter Count.
     *
     */
    public function testGetFilterCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFilterList
     *
     * Get Filters.
     *
     */
    public function testGetFilterList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSingleFilter
     *
     * Get Single Filter.
     *
     */
    public function testGetSingleFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postExecuteFilterCount
     *
     * Execute Filter Count (POST).
     *
     */
    public function testPostExecuteFilterCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postExecuteFilterList
     *
     * Execute Filter List (POST).
     *
     */
    public function testPostExecuteFilterList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postExecuteFilterSingleResult
     *
     * Execute Filter Single Result (POST).
     *
     */
    public function testPostExecuteFilterSingleResult()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateFilter
     *
     * Update Filter.
     *
     */
    public function testUpdateFilter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
